{"version":3,"sources":["components/Container/Container.js","redux/phonebook/phonebook-actions.js","components/Notification/Notification.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactForm.container.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Filter/Filter.js","components/Filter/Filter.container.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Container","children","className","addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","Notification","isExist","CSSTransition","in","timeout","classNames","unmountOnExit","ContactForm","state","handleInputChange","event","setState","currentTarget","value","handleSubmit","e","preventDefault","props","allContacts","find","timer","setTimeout","clearTimeout","onSubmit","this","type","pattern","title","required","onChange","Component","connect","phonebook","contacts","dispatch","contact","phonebookActions","ContactList","onDeleteContact","TransitionGroup","component","map","onClick","height","viewBox","width","d","getFilteredContacts","filter","normalizedContact","toLowerCase","includes","Filter","isAppeared","length","target","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bffd5a60.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import { v4 as uuid } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contact/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/delete');\r\nconst changeFilter = createAction('contact/changeFilter');\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ isExist }) => {\r\n  return (\r\n    <CSSTransition in={isExist} timeout={250} classNames=\"fade\" unmountOnExit>\r\n      <div className=\"notification\">\r\n        <p>This contact is already exist!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport Notification from '../Notification';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    isExist: false,\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.props.allContacts.find(({ name }) => name === this.state.name)) {\r\n      this.setState({ name: '', number: '', isExist: true });\r\n      const timer = setTimeout(() => {\r\n        this.setState({ isExist: false });\r\n      }, 3000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <label className=\"form__lable\">\r\n            <span className=\"form__lable__text\">Name</span>\r\n            <input\r\n              className=\"form__input\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <label className=\"form__lable\">\r\n            <span className=\"form__lable__text\">Number</span>\r\n            <input\r\n              className=\"form__input\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </label>\r\n          <button className=\"form__button\" type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n        <Notification isExist={this.state.isExist} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default ContactForm;\r\n","import { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport ContactForm from './ContactForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  allContacts: state.phonebook.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(phonebookActions.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"dub\" unmountOnExit>\r\n          <li className=\"contact-list__item\" key={id}>\r\n            <p className=\"contact-list__item__name\">{name}</p>\r\n            <p className=\"contact-list__item__number\">{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              <svg\r\n                height=\"365.696pt\"\r\n                viewBox=\"0 0 365.696 365.696\"\r\n                width=\"365.696pt\"\r\n              >\r\n                <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport ContactList from './ContactList';\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedContact = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedContact),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n  contacts: getFilteredContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange, isAppeared }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isAppeared > 1}\r\n      timeout={200}\r\n      classNames=\"pop\"\r\n      unmountOnExit\r\n    >\r\n      <label className=\"filter\">\r\n        <span>Find contacts by name</span>\r\n        <input\r\n          className=\"filter__input\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport Filter from './Filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n  isAppeared: state.phonebook.contacts.length,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nconst App = () => {\n  return (\n    <Container>\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = createReducer(initialState, {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}