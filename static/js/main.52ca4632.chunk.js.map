{"version":3,"sources":["components/Container/Container.js","redux/phonebook/phonebook-types.js","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Notification/Notification.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Container","children","className","name","number","type","types","payload","id","uuid","contactId","value","ContactForm","state","handleInputChange","event","setState","currentTarget","handleSubmit","e","preventDefault","props","onSubmit","this","pattern","title","required","onChange","Component","connect","dispatch","contact","phonebookActions","getFilteredContacts","allContacts","filter","normalizedContact","toLowerCase","includes","phonebook","contacts","onDeleteContact","TransitionGroup","component","map","CSSTransition","timeout","classNames","unmountOnExit","onClick","height","viewBox","width","d","isAppeared","length","target","in","Notification","isExist","App","initialState","combineReducers","rootReducer","phonebookReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uWAKeA,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,YAAf,SAA4BD,K,eCFjD,EACR,cADQ,EAEL,iBAFK,EAGE,uB,QCkBF,EAnBI,SAAC,GAAD,IAAGE,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CACxCC,KAAMC,EACNC,QAAS,CACPC,GAAIC,cACJN,OACAC,YAcW,EAXO,SAAAM,GAAS,MAAK,CAClCL,KAAMC,EACNC,QAASG,IASI,EANM,SAAAC,GAAK,MAAK,CAC7BN,KAAMC,EACNC,QAASI,ICXLC,G,kNACJC,MAAQ,CACNV,KAAM,GACNC,OAAQ,I,EAGVU,kBAAoB,SAAAC,GAClB,EAAKC,SAAL,eAAiBD,EAAME,cAAcd,KAAOY,EAAME,cAAcN,S,EAGlEO,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKG,SAAS,CAAEb,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMF,UAAU,OAAOoB,SAAUC,KAAKL,aAAtC,UACE,wBAAOhB,UAAU,cAAjB,UACE,sBAAMA,UAAU,oBAAhB,kBACA,uBACEA,UAAU,cACVG,KAAK,OACLF,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRf,MAAOY,KAAKV,MAAMV,KAClBwB,SAAUJ,KAAKT,uBAGnB,wBAAOZ,UAAU,cAAjB,UACE,sBAAMA,UAAU,oBAAhB,oBACA,uBACEA,UAAU,cACVG,KAAK,MACLF,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRf,MAAOY,KAAKV,MAAMT,OAClBuB,SAAUJ,KAAKT,uBAGnB,wBAAQZ,UAAU,eAAeG,KAAK,SAAtC,gC,GA7CkBuB,cA2DXC,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCR,SAAU,SAAAS,GAAO,OAAID,EAASE,EAA4BD,QAK7CF,CAAkCjB,G,gBC7B3CqB,G,MAAsB,SAACC,EAAaC,GACxC,IAAMC,EAAoBD,EAAOE,cAEjC,OAAOH,EAAYC,QAAO,SAAAJ,GAAO,OAC/BA,EAAQ5B,KAAKkC,cAAcC,SAASF,QAYzBP,eARS,SAAC,GAAD,QAAGU,UAAaC,EAAhB,EAAgBA,SAAUL,EAA1B,EAA0BA,OAA1B,MAA0C,CAChEK,SAAUP,EAAoBO,EAAUL,OAGf,SAAAL,GAAQ,MAAK,CACtCW,gBAAiB,SAAAjC,GAAE,OAAIsB,EAASE,EAA+BxB,QAGlDqB,EA7CK,SAAC,GAAmC,IAAjCW,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/B,OACE,cAACC,EAAA,EAAD,CAAiBC,UAAU,KAAKzC,UAAU,eAA1C,SACGsC,EAASI,KAAI,gBAAGpC,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAACyC,EAAA,EAAD,CAAwBC,QAAS,IAAKC,WAAW,MAAMC,eAAa,EAApE,SACE,qBAAI9C,UAAU,qBAAd,UACE,mBAAGA,UAAU,2BAAb,SAAyCC,IACzC,mBAAGD,UAAU,6BAAb,SAA2CE,IAC3C,wBAAQC,KAAK,SAAS4C,QAAS,kBAAMR,EAAgBjC,IAArD,SACE,qBACE0C,OAAO,YACPC,QAAQ,sBACRC,MAAM,YAHR,SAKE,sBAAMC,EAAE,slBAT0B7C,IADtBA,WC+BbqB,G,MAAAA,aATS,SAAAhB,GAAK,MAAK,CAChCF,MAAOE,EAAM0B,UAAUJ,OACvBmB,WAAYzC,EAAM0B,UAAUC,SAASe,WAGZ,SAAAzB,GAAQ,MAAK,CACtCH,SAAU,SAAAR,GAAC,OAAIW,EAASE,EAA8Bb,EAAEqC,OAAO7C,YAGlDkB,EAnCA,SAAC,GAAqC,IAAnClB,EAAkC,EAAlCA,MAAOgB,EAA2B,EAA3BA,SAAU2B,EAAiB,EAAjBA,WACjC,OACE,cAACT,EAAA,EAAD,CACEY,GAAIH,EAAa,EACjBR,QAAS,IACTC,WAAW,MACXC,eAAa,EAJf,SAME,wBAAO9C,UAAU,SAAjB,UACE,yDACA,uBACEA,UAAU,gBACVG,KAAK,OACLM,MAAOA,EACPgB,SAAUA,aCRL+B,G,MAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,cAACd,EAAA,EAAD,CAAeY,GAAIE,EAASb,QAAS,IAAKC,WAAW,OAAOC,eAAa,EAAzE,SACE,qBAAK9C,UAAU,eAAf,SACE,qECiEO0D,E,4MAjEb/C,MAAQ,CACN8C,SAAS,G,4CA+CX,WACE,OACE,eAAC,EAAD,WACE,oBAAIzD,UAAU,QAAd,uBACA,cAAC,EAAD,CAAcyD,QAASpC,KAAKV,MAAM8C,UAElC,cAAC,EAAD,IACA,0CAEA,cAAC,EAAD,IAEA,cAAC,EAAD,W,GA5DU/B,a,uBCJZiC,EAAe,CACnB,CAAErD,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEI,GAAI,OAAQL,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEI,GAAI,OAAQL,KAAM,iBAAkBC,OAAQ,cAyBjC0D,4BAAgB,CAC7BtB,SAvBe,WAA8C,IAA7C3B,EAA4C,uDAApCgD,EAAoC,yCAApBxD,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAC9C,OAAQF,GACN,KAAKC,EACH,MAAM,GAAN,mBAAWO,GAAX,CAAkBN,IAEpB,KAAKD,EACH,OAAOO,EAAMsB,QAAO,qBAAG3B,KAAgBD,KAEzC,QACE,OAAOM,IAeXsB,OAZa,WAAoC,IAAnCtB,EAAkC,uDAA1B,GAA0B,yCAApBR,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAClC,OAAQF,GACN,KAAKC,EACH,OAAOC,EAET,QACE,OAAOM,MCxBPkD,EAAcD,0BAAgB,CAClCvB,UAAWyB,IAKEC,EAFDC,sBAAYH,EAAaI,iC,YCAvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.52ca4632.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","// eslint-disable-next-line\r\nexport default {\r\n  ADD: 'contact/add',\r\n  DELETE: 'contact/delete',\r\n  CHANGE_FILTER: 'contact/changeFilter',\r\n};\r\n","import types from './phonebook-types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst addContact = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: uuid(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Name</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label className=\"form__lable\">\r\n          <span className=\"form__lable__text\">Number</span>\r\n          <input\r\n            className=\"form__input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <button className=\"form__button\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(phonebookActions.addContact(contact)),\r\n});\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact-list\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"dub\" unmountOnExit>\r\n          <li className=\"contact-list__item\" key={id}>\r\n            <p className=\"contact-list__item__name\">{name}</p>\r\n            <p className=\"contact-list__item__number\">{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n              <svg\r\n                height=\"365.696pt\"\r\n                viewBox=\"0 0 365.696 365.696\"\r\n                width=\"365.696pt\"\r\n              >\r\n                <path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedContact = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedContact),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n  contacts: getFilteredContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nimport './Filter.scss';\r\n\r\nconst Filter = ({ value, onChange, isAppeared }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isAppeared > 1}\r\n      timeout={200}\r\n      classNames=\"pop\"\r\n      unmountOnExit\r\n    >\r\n      <label className=\"filter\">\r\n        <span>Find contacts by name</span>\r\n        <input\r\n          className=\"filter__input\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.phonebook.filter,\r\n  isAppeared: state.phonebook.contacts.length,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './Notification.scss';\r\n\r\nconst Notification = ({ isExist }) => {\r\n  return (\r\n    <CSSTransition in={isExist} timeout={250} classNames=\"fade\" unmountOnExit>\r\n      <div className=\"notification\">\r\n        <p>This contact is already exist!</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    isExist: false,\n  };\n\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  //   if (this.state.isExist !== prevState.isExist) {\n  //     const timer = setTimeout(() => {\n  //       this.setState({ isExist: false });\n  //     }, 3000);\n  //     return () => clearTimeout(timer);\n  //   }\n  // }\n\n  // addContact = ({ name, number }) => {\n  //   const contact = { id: uuid(), name, number };\n\n  //   if (this.state.contacts.find(contact => contact.name === name)) {\n  //     this.setState({ isExist: true });\n  //     return;\n  //   }\n\n  //   this.setState(prevState => ({\n  //     contacts: [...prevState.contacts, contact],\n  //   }));\n  // };\n\n  // deleteContact = contactId => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n  //   }));\n  // };\n\n  // changeFilter = event => {\n  //   this.setState({ filter: event.currentTarget.value });\n  // };\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"title\">Phonebook</h1>\n        <Notification isExist={this.state.isExist} />\n\n        <ContactForm />\n        <h2>Contacts</h2>\n\n        <Filter />\n\n        <ContactList />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport types from './phonebook-types';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst contacts = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}